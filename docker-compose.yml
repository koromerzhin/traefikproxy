version: "3"

networks:
  proxynetwork:
    driver: overlay
    external: true

volumes:
  certs:

services:
  reverse:
    image: alpine
    command: sh -c "cd /etc/ssl/traefik && wget traefik.me/cert.pem -O cert.pem && wget traefik.me/privkey.pem -O privkey.pem"
    volumes:
      - certs:/etc/ssl/traefik
    deploy:
      labels:
        - "traefik.enable=false"
  traefik:
    # The official v2 Traefik docker image
    image: traefik:2.3.7
    # Enables the web UI and tells Traefik to listen to docker
    ports:
      - "80:80"
      - "443:443"
    command:
      - --api.insecure=true # set to 'false' on production
      - --api.dashboard=true # see https://docs.traefik.io/v2.0/operations/dashboard/#secure-mode for how to secure the dashboard
      - --api.debug=true # enable additional endpoints for debugging and profiling
      - --log.level=DEBUG # debug while we get it working, for more levels/info see https://docs.traefik.io/observability/logs/
      - --providers.docker=true
      - --providers.docker.swarmMode=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=proxynetwork
      - --entrypoints.web.address=:80
      - --entrypoints.web-secured.address=:443
    networks:
      - proxynetwork
    volumes:
      # So that Traefik can listen to the Docker events
      - ${PWD}/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/conf/traefik.toml:/etc/traefik/traefik.toml
      - ${PWD}/conf/tls.yml:/etc/traefik/tls.yml
      - certs:/etc/ssl/traefik
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.proxy.rule=Host(`proxy.traefik.me`)"
        - "traefik.http.routers.proxy-tls.tls.domains[0].main=proxy.traefik.me"
        - "traefik.http.routers.proxy-tls.tls.domains[0].sans=proxy-*.traefik.me"
        - "traefik.http.services.proxy.loadbalancer.server.port=8080"
